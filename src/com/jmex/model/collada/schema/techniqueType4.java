/**
 * techniqueType4.java
 *
 * This file was generated by XMLSpy 2007sp2 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSpy Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package com.jmex.model.collada.schema;

import com.jmex.xml.types.SchemaID;
import com.jmex.xml.types.SchemaNCName;

public class techniqueType4 extends com.jmex.xml.xml.Node {

	public techniqueType4(techniqueType4 node) {
		super(node);
	}

	public techniqueType4(org.w3c.dom.Node node) {
		super(node);
	}

	public techniqueType4(org.w3c.dom.Document doc) {
		super(doc);
	}

	public techniqueType4(com.jmex.xml.xml.Document doc, String namespaceURI, String prefix, String name) {
		super(doc, namespaceURI, prefix, name);
	}
	
	public void adjustPrefix() {
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Attribute, null, "id" );
				tmpNode != null;
				tmpNode = getDomNextChild( Attribute, null, "id", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, false);
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Attribute, null, "sid" );
				tmpNode != null;
				tmpNode = getDomNextChild( Attribute, null, "sid", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, false);
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "annotate" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "annotate", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new fx_annotate_common(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "code" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "code", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new fx_code_profile(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "include" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "include", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new fx_include_common(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "image" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "image", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new imageType(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "newparam" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "newparam", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new glsl_newparam(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "setparam" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "setparam", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new glsl_setparam(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "pass" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "pass", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new passType3(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "extra" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "extra", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new extraType(tmpNode).adjustPrefix();
		}
	}
	public void setXsiType() {
 		org.w3c.dom.Element el = (org.w3c.dom.Element) domNode;
		el.setAttributeNS("http://www.w3.org/2001/XMLSchema-instance", "xsi:type", "technique");
	}

	public static int getidMinCount() {
		return 0;
	}

	public static int getidMaxCount() {
		return 1;
	}

	public int getidCount() {
		return getDomChildCount(Attribute, null, "id");
	}

	public boolean hasid() {
		return hasDomChild(Attribute, null, "id");
	}

	public SchemaID newid() {
		return new SchemaID();
	}

	public SchemaID getidAt(int index) throws Exception {
		return new SchemaID(getDomNodeValue(getDomChildAt(Attribute, null, "id", index)));
	}

	public org.w3c.dom.Node getStartingidCursor() throws Exception {
		return getDomFirstChild(Attribute, null, "id" );
	}

	public org.w3c.dom.Node getAdvancedidCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Attribute, null, "id", curNode );
	}

	public SchemaID getidValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new SchemaID(getDomNodeValue(curNode));
	}

	public SchemaID getid() throws Exception 
 {
		return getidAt(0);
	}

	public void removeidAt(int index) {
		removeDomChildAt(Attribute, null, "id", index);
	}

	public void removeid() {
		removeidAt(0);
	}

	public org.w3c.dom.Node addid(SchemaID value) {
		if( value.isNull() )
			return null;

		return  appendDomChild(Attribute, null, "id", value.toString());
	}

	public org.w3c.dom.Node addid(String value) throws Exception {
		return addid(new SchemaID(value));
	}

	public void insertidAt(SchemaID value, int index) {
		insertDomChildAt(Attribute, null, "id", index, value.toString());
	}

	public void insertidAt(String value, int index) throws Exception {
		insertidAt(new SchemaID(value), index);
	}

	public void replaceidAt(SchemaID value, int index) {
		replaceDomChildAt(Attribute, null, "id", index, value.toString());
	}

	public void replaceidAt(String value, int index) throws Exception {
		replaceidAt(new SchemaID(value), index);
	}

	public static int getsidMinCount() {
		return 1;
	}

	public static int getsidMaxCount() {
		return 1;
	}

	public int getsidCount() {
		return getDomChildCount(Attribute, null, "sid");
	}

	public boolean hassid() {
		return hasDomChild(Attribute, null, "sid");
	}

	public SchemaNCName newsid() {
		return new SchemaNCName();
	}

	public SchemaNCName getsidAt(int index) throws Exception {
		return new SchemaNCName(getDomNodeValue(getDomChildAt(Attribute, null, "sid", index)));
	}

	public org.w3c.dom.Node getStartingsidCursor() throws Exception {
		return getDomFirstChild(Attribute, null, "sid" );
	}

	public org.w3c.dom.Node getAdvancedsidCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Attribute, null, "sid", curNode );
	}

	public SchemaNCName getsidValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new SchemaNCName(getDomNodeValue(curNode));
	}

	public SchemaNCName getsid() throws Exception 
 {
		return getsidAt(0);
	}

	public void removesidAt(int index) {
		removeDomChildAt(Attribute, null, "sid", index);
	}

	public void removesid() {
		removesidAt(0);
	}

	public org.w3c.dom.Node addsid(SchemaNCName value) {
		if( value.isNull() )
			return null;

		return  appendDomChild(Attribute, null, "sid", value.toString());
	}

	public org.w3c.dom.Node addsid(String value) throws Exception {
		return addsid(new SchemaNCName(value));
	}

	public void insertsidAt(SchemaNCName value, int index) {
		insertDomChildAt(Attribute, null, "sid", index, value.toString());
	}

	public void insertsidAt(String value, int index) throws Exception {
		insertsidAt(new SchemaNCName(value), index);
	}

	public void replacesidAt(SchemaNCName value, int index) {
		replaceDomChildAt(Attribute, null, "sid", index, value.toString());
	}

	public void replacesidAt(String value, int index) throws Exception {
		replacesidAt(new SchemaNCName(value), index);
	}

	public static int getannotateMinCount() {
		return 0;
	}

	public static int getannotateMaxCount() {
		return Integer.MAX_VALUE;
	}

	public int getannotateCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "annotate");
	}

	public boolean hasannotate() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "annotate");
	}

	public fx_annotate_common newannotate() {
		return new fx_annotate_common(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "annotate"));
	}

	public fx_annotate_common getannotateAt(int index) throws Exception {
		return new fx_annotate_common(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "annotate", index));
	}

	public org.w3c.dom.Node getStartingannotateCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "annotate" );
	}

	public org.w3c.dom.Node getAdvancedannotateCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "annotate", curNode );
	}

	public fx_annotate_common getannotateValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new fx_annotate_common(curNode);
	}

	public fx_annotate_common getannotate() throws Exception 
 {
		return getannotateAt(0);
	}

	public void removeannotateAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "annotate", index);
	}

	public void removeannotate() {
		while (hasannotate())
			removeannotateAt(0);
	}

	public org.w3c.dom.Node addannotate(fx_annotate_common value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "annotate", value);
	}

	public void insertannotateAt(fx_annotate_common value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "annotate", index, value);
	}

	public void replaceannotateAt(fx_annotate_common value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "annotate", index, value);
	}

	public static int getcodeMinCount() {
		return 1;
	}

	public static int getcodeMaxCount() {
		return 1;
	}

	public int getcodeCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "code");
	}

	public boolean hascode() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "code");
	}

	public fx_code_profile newcode() {
		return new fx_code_profile(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "code"));
	}

	public fx_code_profile getcodeAt(int index) throws Exception {
		return new fx_code_profile(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "code", index));
	}

	public org.w3c.dom.Node getStartingcodeCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "code" );
	}

	public org.w3c.dom.Node getAdvancedcodeCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "code", curNode );
	}

	public fx_code_profile getcodeValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new fx_code_profile(curNode);
	}

	public fx_code_profile getcode() throws Exception 
 {
		return getcodeAt(0);
	}

	public void removecodeAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "code", index);
	}

	public void removecode() {
		removecodeAt(0);
	}

	public org.w3c.dom.Node addcode(fx_code_profile value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "code", value);
	}

	public void insertcodeAt(fx_code_profile value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "code", index, value);
	}

	public void replacecodeAt(fx_code_profile value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "code", index, value);
	}

	public static int getincludeMinCount() {
		return 1;
	}

	public static int getincludeMaxCount() {
		return 1;
	}

	public int getincludeCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "include");
	}

	public boolean hasinclude() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "include");
	}

	public fx_include_common newinclude() {
		return new fx_include_common(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "include"));
	}

	public fx_include_common getincludeAt(int index) throws Exception {
		return new fx_include_common(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "include", index));
	}

	public org.w3c.dom.Node getStartingincludeCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "include" );
	}

	public org.w3c.dom.Node getAdvancedincludeCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "include", curNode );
	}

	public fx_include_common getincludeValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new fx_include_common(curNode);
	}

	public fx_include_common getinclude() throws Exception 
 {
		return getincludeAt(0);
	}

	public void removeincludeAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "include", index);
	}

	public void removeinclude() {
		removeincludeAt(0);
	}

	public org.w3c.dom.Node addinclude(fx_include_common value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "include", value);
	}

	public void insertincludeAt(fx_include_common value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "include", index, value);
	}

	public void replaceincludeAt(fx_include_common value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "include", index, value);
	}

	public static int getimageMinCount() {
		return 1;
	}

	public static int getimageMaxCount() {
		return 1;
	}

	public int getimageCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "image");
	}

	public boolean hasimage() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "image");
	}

	public imageType newimage() {
		return new imageType(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "image"));
	}

	public imageType getimageAt(int index) throws Exception {
		return new imageType(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "image", index));
	}

	public org.w3c.dom.Node getStartingimageCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "image" );
	}

	public org.w3c.dom.Node getAdvancedimageCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "image", curNode );
	}

	public imageType getimageValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new imageType(curNode);
	}

	public imageType getimage() throws Exception 
 {
		return getimageAt(0);
	}

	public void removeimageAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "image", index);
	}

	public void removeimage() {
		removeimageAt(0);
	}

	public org.w3c.dom.Node addimage(imageType value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "image", value);
	}

	public void insertimageAt(imageType value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "image", index, value);
	}

	public void replaceimageAt(imageType value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "image", index, value);
	}

	public static int getnewparamMinCount() {
		return 1;
	}

	public static int getnewparamMaxCount() {
		return 1;
	}

	public int getnewparamCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "newparam");
	}

	public boolean hasnewparam() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "newparam");
	}

	public glsl_newparam newnewparam() {
		return new glsl_newparam(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "newparam"));
	}

	public glsl_newparam getnewparamAt(int index) throws Exception {
		return new glsl_newparam(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "newparam", index));
	}

	public org.w3c.dom.Node getStartingnewparamCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "newparam" );
	}

	public org.w3c.dom.Node getAdvancednewparamCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "newparam", curNode );
	}

	public glsl_newparam getnewparamValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new glsl_newparam(curNode);
	}

	public glsl_newparam getnewparam() throws Exception 
 {
		return getnewparamAt(0);
	}

	public void removenewparamAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "newparam", index);
	}

	public void removenewparam() {
		removenewparamAt(0);
	}

	public org.w3c.dom.Node addnewparam(glsl_newparam value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "newparam", value);
	}

	public void insertnewparamAt(glsl_newparam value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "newparam", index, value);
	}

	public void replacenewparamAt(glsl_newparam value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "newparam", index, value);
	}

	public static int getsetparamMinCount() {
		return 1;
	}

	public static int getsetparamMaxCount() {
		return 1;
	}

	public int getsetparamCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "setparam");
	}

	public boolean hassetparam() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "setparam");
	}

	public glsl_setparam newsetparam() {
		return new glsl_setparam(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "setparam"));
	}

	public glsl_setparam getsetparamAt(int index) throws Exception {
		return new glsl_setparam(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "setparam", index));
	}

	public org.w3c.dom.Node getStartingsetparamCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "setparam" );
	}

	public org.w3c.dom.Node getAdvancedsetparamCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "setparam", curNode );
	}

	public glsl_setparam getsetparamValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new glsl_setparam(curNode);
	}

	public glsl_setparam getsetparam() throws Exception 
 {
		return getsetparamAt(0);
	}

	public void removesetparamAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "setparam", index);
	}

	public void removesetparam() {
		removesetparamAt(0);
	}

	public org.w3c.dom.Node addsetparam(glsl_setparam value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "setparam", value);
	}

	public void insertsetparamAt(glsl_setparam value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "setparam", index, value);
	}

	public void replacesetparamAt(glsl_setparam value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "setparam", index, value);
	}

	public static int getpassMinCount() {
		return 1;
	}

	public static int getpassMaxCount() {
		return Integer.MAX_VALUE;
	}

	public int getpassCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "pass");
	}

	public boolean haspass() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "pass");
	}

	public passType3 newpass() {
		return new passType3(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "pass"));
	}

	public passType3 getpassAt(int index) throws Exception {
		return new passType3(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "pass", index));
	}

	public org.w3c.dom.Node getStartingpassCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "pass" );
	}

	public org.w3c.dom.Node getAdvancedpassCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "pass", curNode );
	}

	public passType3 getpassValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new passType3(curNode);
	}

	public passType3 getpass() throws Exception 
 {
		return getpassAt(0);
	}

	public void removepassAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "pass", index);
	}

	public void removepass() {
		while (haspass())
			removepassAt(0);
	}

	public org.w3c.dom.Node addpass(passType3 value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "pass", value);
	}

	public void insertpassAt(passType3 value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "pass", index, value);
	}

	public void replacepassAt(passType3 value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "pass", index, value);
	}

	public static int getextraMinCount() {
		return 0;
	}

	public static int getextraMaxCount() {
		return Integer.MAX_VALUE;
	}

	public int getextraCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "extra");
	}

	public boolean hasextra() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "extra");
	}

	public extraType newextra() {
		return new extraType(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "extra"));
	}

	public extraType getextraAt(int index) throws Exception {
		return new extraType(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "extra", index));
	}

	public org.w3c.dom.Node getStartingextraCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "extra" );
	}

	public org.w3c.dom.Node getAdvancedextraCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "extra", curNode );
	}

	public extraType getextraValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new extraType(curNode);
	}

	public extraType getextra() throws Exception 
 {
		return getextraAt(0);
	}

	public void removeextraAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "extra", index);
	}

	public void removeextra() {
		while (hasextra())
			removeextraAt(0);
	}

	public org.w3c.dom.Node addextra(extraType value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "extra", value);
	}

	public void insertextraAt(extraType value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "extra", index, value);
	}

	public void replaceextraAt(extraType value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "extra", index, value);
	}

}
