/**
 * limitsType.java
 *
 * This file was generated by XMLSpy 2007sp2 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSpy Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package com.jmex.model.collada.schema;


public class limitsType extends com.jmex.xml.xml.Node {

	public limitsType(limitsType node) {
		super(node);
	}

	public limitsType(org.w3c.dom.Node node) {
		super(node);
	}

	public limitsType(org.w3c.dom.Document doc) {
		super(doc);
	}

	public limitsType(com.jmex.xml.xml.Document doc, String namespaceURI, String prefix, String name) {
		super(doc, namespaceURI, prefix, name);
	}
	
	public void adjustPrefix() {
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new swing_cone_and_twistType(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "linear" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "linear", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new linearType(tmpNode).adjustPrefix();
		}
	}
	public void setXsiType() {
 		org.w3c.dom.Element el = (org.w3c.dom.Element) domNode;
		el.setAttributeNS("http://www.w3.org/2001/XMLSchema-instance", "xsi:type", "limits");
	}

	public static int getswing_cone_and_twistMinCount() {
		return 0;
	}

	public static int getswing_cone_and_twistMaxCount() {
		return 1;
	}

	public int getswing_cone_and_twistCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist");
	}

	public boolean hasswing_cone_and_twist() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist");
	}

	public swing_cone_and_twistType newswing_cone_and_twist() {
		return new swing_cone_and_twistType(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist"));
	}

	public swing_cone_and_twistType getswing_cone_and_twistAt(int index) throws Exception {
		return new swing_cone_and_twistType(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist", index));
	}

	public org.w3c.dom.Node getStartingswing_cone_and_twistCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist" );
	}

	public org.w3c.dom.Node getAdvancedswing_cone_and_twistCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist", curNode );
	}

	public swing_cone_and_twistType getswing_cone_and_twistValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new swing_cone_and_twistType(curNode);
	}

	public swing_cone_and_twistType getswing_cone_and_twist() throws Exception 
 {
		return getswing_cone_and_twistAt(0);
	}

	public void removeswing_cone_and_twistAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist", index);
	}

	public void removeswing_cone_and_twist() {
		removeswing_cone_and_twistAt(0);
	}

	public org.w3c.dom.Node addswing_cone_and_twist(swing_cone_and_twistType value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist", value);
	}

	public void insertswing_cone_and_twistAt(swing_cone_and_twistType value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist", index, value);
	}

	public void replaceswing_cone_and_twistAt(swing_cone_and_twistType value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "swing_cone_and_twist", index, value);
	}

	public static int getlinearMinCount() {
		return 0;
	}

	public static int getlinearMaxCount() {
		return 1;
	}

	public int getlinearCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "linear");
	}

	public boolean haslinear() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "linear");
	}

	public linearType newlinear() {
		return new linearType(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "linear"));
	}

	public linearType getlinearAt(int index) throws Exception {
		return new linearType(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "linear", index));
	}

	public org.w3c.dom.Node getStartinglinearCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "linear" );
	}

	public org.w3c.dom.Node getAdvancedlinearCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "linear", curNode );
	}

	public linearType getlinearValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new linearType(curNode);
	}

	public linearType getlinear() throws Exception 
 {
		return getlinearAt(0);
	}

	public void removelinearAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "linear", index);
	}

	public void removelinear() {
		removelinearAt(0);
	}

	public org.w3c.dom.Node addlinear(linearType value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "linear", value);
	}

	public void insertlinearAt(linearType value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "linear", index, value);
	}

	public void replacelinearAt(linearType value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "linear", index, value);
	}

}
