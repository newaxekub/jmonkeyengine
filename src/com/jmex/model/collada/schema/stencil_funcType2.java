/**
 * stencil_funcType2.java
 *
 * This file was generated by XMLSpy 2007sp2 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSpy Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package com.jmex.model.collada.schema;


public class stencil_funcType2 extends com.jmex.xml.xml.Node {

	public stencil_funcType2(stencil_funcType2 node) {
		super(node);
	}

	public stencil_funcType2(org.w3c.dom.Node node) {
		super(node);
	}

	public stencil_funcType2(org.w3c.dom.Document doc) {
		super(doc);
	}

	public stencil_funcType2(com.jmex.xml.xml.Document doc, String namespaceURI, String prefix, String name) {
		super(doc, namespaceURI, prefix, name);
	}
	
	public void adjustPrefix() {
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "func" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "func", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new funcType4(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "ref" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "ref", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new refType3(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "mask" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "mask", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
			new maskType4(tmpNode).adjustPrefix();
		}
	}
	public void setXsiType() {
 		org.w3c.dom.Element el = (org.w3c.dom.Element) domNode;
		el.setAttributeNS("http://www.w3.org/2001/XMLSchema-instance", "xsi:type", "stencil_func");
	}

	public static int getfuncMinCount() {
		return 1;
	}

	public static int getfuncMaxCount() {
		return 1;
	}

	public int getfuncCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "func");
	}

	public boolean hasfunc() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "func");
	}

	public funcType4 newfunc() {
		return new funcType4(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "func"));
	}

	public funcType4 getfuncAt(int index) throws Exception {
		return new funcType4(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "func", index));
	}

	public org.w3c.dom.Node getStartingfuncCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "func" );
	}

	public org.w3c.dom.Node getAdvancedfuncCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "func", curNode );
	}

	public funcType4 getfuncValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new funcType4(curNode);
	}

	public funcType4 getfunc() throws Exception 
 {
		return getfuncAt(0);
	}

	public void removefuncAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "func", index);
	}

	public void removefunc() {
		removefuncAt(0);
	}

	public org.w3c.dom.Node addfunc(funcType4 value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "func", value);
	}

	public void insertfuncAt(funcType4 value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "func", index, value);
	}

	public void replacefuncAt(funcType4 value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "func", index, value);
	}

	public static int getrefMinCount() {
		return 1;
	}

	public static int getrefMaxCount() {
		return 1;
	}

	public int getrefCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "ref");
	}

	public boolean hasref() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "ref");
	}

	public refType3 newref() {
		return new refType3(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "ref"));
	}

	public refType3 getrefAt(int index) throws Exception {
		return new refType3(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "ref", index));
	}

	public org.w3c.dom.Node getStartingrefCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "ref" );
	}

	public org.w3c.dom.Node getAdvancedrefCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "ref", curNode );
	}

	public refType3 getrefValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new refType3(curNode);
	}

	public refType3 getref() throws Exception 
 {
		return getrefAt(0);
	}

	public void removerefAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "ref", index);
	}

	public void removeref() {
		removerefAt(0);
	}

	public org.w3c.dom.Node addref(refType3 value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "ref", value);
	}

	public void insertrefAt(refType3 value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "ref", index, value);
	}

	public void replacerefAt(refType3 value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "ref", index, value);
	}

	public static int getmaskMinCount() {
		return 1;
	}

	public static int getmaskMaxCount() {
		return 1;
	}

	public int getmaskCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "mask");
	}

	public boolean hasmask() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "mask");
	}

	public maskType4 newmask() {
		return new maskType4(domNode.getOwnerDocument().createElementNS("http://www.collada.org/2005/11/COLLADASchema", "mask"));
	}

	public maskType4 getmaskAt(int index) throws Exception {
		return new maskType4(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "mask", index));
	}

	public org.w3c.dom.Node getStartingmaskCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "mask" );
	}

	public org.w3c.dom.Node getAdvancedmaskCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "mask", curNode );
	}

	public maskType4 getmaskValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new maskType4(curNode);
	}

	public maskType4 getmask() throws Exception 
 {
		return getmaskAt(0);
	}

	public void removemaskAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "mask", index);
	}

	public void removemask() {
		removemaskAt(0);
	}

	public org.w3c.dom.Node addmask(maskType4 value) {
		return appendDomElement("http://www.collada.org/2005/11/COLLADASchema", "mask", value);
	}

	public void insertmaskAt(maskType4 value, int index) {
		insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "mask", index, value);
	}

	public void replacemaskAt(maskType4 value, int index) {
		replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema", "mask", index, value);
	}

}
