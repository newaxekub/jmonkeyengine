/**
 * primaryType.java
 *
 * This file was generated by XMLSpy 2007sp2 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSpy Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package com.jmex.model.collada.schema;

import com.jmex.xml.types.SchemaIDRef;

public class primaryType extends com.jmex.xml.xml.Node {

	public primaryType(primaryType node) {
		super(node);
	}

	public primaryType(org.w3c.dom.Node node) {
		super(node);
	}

	public primaryType(org.w3c.dom.Document doc) {
		super(doc);
	}

	public primaryType(com.jmex.xml.xml.Document doc, String namespaceURI, String prefix, String name) {
		super(doc, namespaceURI, prefix, name);
	}
	
	public void adjustPrefix() {
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Attribute, null, "ref" );
				tmpNode != null;
				tmpNode = getDomNextChild( Attribute, null, "ref", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, false);
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "order" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "order", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, true);
		}
	}
	public void setXsiType() {
 		org.w3c.dom.Element el = (org.w3c.dom.Element) domNode;
		el.setAttributeNS("http://www.w3.org/2001/XMLSchema-instance", "xsi:type", "primary");
	}

	public static int getrefMinCount() {
		return 1;
	}

	public static int getrefMaxCount() {
		return 1;
	}

	public int getrefCount() {
		return getDomChildCount(Attribute, null, "ref");
	}

	public boolean hasref() {
		return hasDomChild(Attribute, null, "ref");
	}

	public SchemaIDRef newref() {
		return new SchemaIDRef();
	}

	public SchemaIDRef getrefAt(int index) throws Exception {
		return new SchemaIDRef(getDomNodeValue(getDomChildAt(Attribute, null, "ref", index)));
	}

	public org.w3c.dom.Node getStartingrefCursor() throws Exception {
		return getDomFirstChild(Attribute, null, "ref" );
	}

	public org.w3c.dom.Node getAdvancedrefCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Attribute, null, "ref", curNode );
	}

	public SchemaIDRef getrefValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new SchemaIDRef(getDomNodeValue(curNode));
	}

	public SchemaIDRef getref() throws Exception 
 {
		return getrefAt(0);
	}

	public void removerefAt(int index) {
		removeDomChildAt(Attribute, null, "ref", index);
	}

	public void removeref() {
		removerefAt(0);
	}

	public org.w3c.dom.Node addref(SchemaIDRef value) {
		if( value.isNull() )
			return null;

		return  appendDomChild(Attribute, null, "ref", value.toString());
	}

	public org.w3c.dom.Node addref(String value) throws Exception {
		return addref(new SchemaIDRef(value));
	}

	public void insertrefAt(SchemaIDRef value, int index) {
		insertDomChildAt(Attribute, null, "ref", index, value.toString());
	}

	public void insertrefAt(String value, int index) throws Exception {
		insertrefAt(new SchemaIDRef(value), index);
	}

	public void replacerefAt(SchemaIDRef value, int index) {
		replaceDomChildAt(Attribute, null, "ref", index, value.toString());
	}

	public void replacerefAt(String value, int index) throws Exception {
		replacerefAt(new SchemaIDRef(value), index);
	}

	public static int getorderMinCount() {
		return 6;
	}

	public static int getorderMaxCount() {
		return 6;
	}

	public int getorderCount() {
		return getDomChildCount(Element, "http://www.collada.org/2005/11/COLLADASchema", "order");
	}

	public boolean hasorder() {
		return hasDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "order");
	}

	public fx_surface_face_enum neworder() {
		return new fx_surface_face_enum();
	}

	public fx_surface_face_enum getorderAt(int index) throws Exception {
		return new fx_surface_face_enum(getDomNodeValue(getDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "order", index)));
	}

	public org.w3c.dom.Node getStartingorderCursor() throws Exception {
		return getDomFirstChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "order" );
	}

	public org.w3c.dom.Node getAdvancedorderCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, "http://www.collada.org/2005/11/COLLADASchema", "order", curNode );
	}

	public fx_surface_face_enum getorderValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.jmex.xml.xml.XmlException("Out of range");
		else
			return new fx_surface_face_enum(getDomNodeValue(curNode));
	}

	public fx_surface_face_enum getorder() throws Exception 
 {
		return getorderAt(0);
	}

	public void removeorderAt(int index) {
		removeDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "order", index);
	}

	public void removeorder() {
		while (hasorder())
			removeorderAt(0);
	}

	public org.w3c.dom.Node addorder(fx_surface_face_enum value) {
		if( value.isNull() )
			return null;

		return  appendDomChild(Element, "http://www.collada.org/2005/11/COLLADASchema", "order", value.toString());
	}

	public org.w3c.dom.Node addorder(String value) throws Exception {
		return addorder(new fx_surface_face_enum(value));
	}

	public void insertorderAt(fx_surface_face_enum value, int index) {
		insertDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "order", index, value.toString());
	}

	public void insertorderAt(String value, int index) throws Exception {
		insertorderAt(new fx_surface_face_enum(value), index);
	}

	public void replaceorderAt(fx_surface_face_enum value, int index) {
		replaceDomChildAt(Element, "http://www.collada.org/2005/11/COLLADASchema", "order", index, value.toString());
	}

	public void replaceorderAt(String value, int index) throws Exception {
		replaceorderAt(new fx_surface_face_enum(value), index);
	}

}
