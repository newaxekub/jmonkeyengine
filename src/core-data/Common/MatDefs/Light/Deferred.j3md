MaterialDef Phong Lighting Deferred {

    MaterialParameters {

        // Use more efficent algorithms to improve performance
        Boolean m_LowQuality

        // Improve quality at the cost of performance
        Boolean m_HighQuality

        // Activate shading along the tangent, instead of the normal
        // Requires tangent data to be available on the model.
        Boolean m_VTangent

        // Use minnaert diffuse instead of lambert
        Boolean m_Minnaert

        // Use ward specular instead of phong
        Boolean m_WardIso

        Texture2D m_DiffuseData
        Texture2D m_SpecularData
        Texture2D m_NormalData
        Texture2D m_DepthData

        Vector3 m_FrustumCorner
        Vector2 m_FrustumNearFar
        Matrix4 m_ViewProjectionMatrixInverse

        // Color ramp, will map diffuse and specular values through it.
        Texture2D m_ColorRamp
    }

    Technique {
        LightMode MultiPass

        VertexShader GLSL100:   Common/MatDefs/Light/Deferred.vert
        FragmentShader GLSL100: Common/MatDefs/Light/Deferred.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            ViewMatrix
            CameraPosition
        }

        Defines {
            ATTENUATION : m_Attenuation
            V_TANGENT : m_VTangent
            MINNAERT  : m_Minnaert
            WARDISO   : m_WardIso
            LOW_QUALITY : m_LowQuality
            HQ_ATTENUATION : m_HighQuality
            COLORRAMP : m_ColorRamp
        }
    }

    Technique FixedFunc {
    }

}